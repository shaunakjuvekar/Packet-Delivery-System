#!/usr/bin/python3 -u

import socket
import sys
from queue import PriorityQueue, Queue
from threading import RLock, Thread
from typing import Dict, Tuple

from src.input_reader import InputReader
from src.logging import get_logger
from src.socket_reader import SocketReader
from src.socket_writer import SocketWriter
from src.timeouts import Timeouts

logger = get_logger("[4254send] main")

MSG_SIZE = 1500
DATA_SIZE = 1000
TIMEOUT = 10
SEQUENCE = 0

# Bind to localhost and an ephemeral port
IP_PORT = sys.argv[1]
UDP_IP = IP_PORT[0 : IP_PORT.find(":")]
UDP_PORT = int(IP_PORT[IP_PORT.find(":") + 1 :])
destination = (UDP_IP, UDP_PORT)

sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
sock.settimeout(TIMEOUT)

logger.info("Socket created, destination: %s", destination)

# Initialilzation of common resources

# A queue with packets to send out of the socket. Producers put packets into
# the queue and the socket writer thread sends them out.
packets_to_send = PriorityQueue(maxsize=1000)
# A queue to signal to/from the timeout thread.
timeout_messagebox = Queue(maxsize=1)
# All packets generated by the input thread.
all_packets = {}
# All packets that are currently "in flight", i.e. awaiting acks from the
# receiver.
outstanding_packets: Dict[int, Tuple[Dict, float]] = {}
# A mutex to gate access to outstanding_packets from different threads.
outstanding_packets_lock = RLock()

input_reader = InputReader(
    packets_to_send=packets_to_send, all_packets=all_packets, data_size=DATA_SIZE
)
socket_reader = SocketReader(
    sock=sock,
    packets_to_send=packets_to_send,
    timeout_messagebox=timeout_messagebox,
    all_packets=all_packets,
    outstanding_packets=outstanding_packets,
    outstanding_packets_lock=outstanding_packets_lock,
    destination=destination,
    message_size=MSG_SIZE,
)
socket_writer = SocketWriter(
    sock=sock,
    packets_to_send=packets_to_send,
    outstanding_packets=outstanding_packets,
    outstanding_packets_lock=outstanding_packets_lock,
    destination=destination,
)
timeouts = Timeouts(
    packets_to_send=packets_to_send,
    outstanding_packets=outstanding_packets,
    outstanding_packets_lock=outstanding_packets_lock,
    timeout_messagebox=timeout_messagebox,
)

input_thread = Thread(target=input_reader.run)
writer_thread = Thread(target=socket_writer.run)
reader_thread = Thread(target=socket_reader.run)
timeout_thread = Thread(target=timeouts.run)

input_thread.start()
writer_thread.start()
reader_thread.start()
timeout_thread.start()

logger.info("Spun off threads.")

sys.exit(0)
